configfile: "config.yaml"

rule all1:
    input:
        expand("fastqc_output/zip/{sample}_{read_num}.fastqc.zip", sample=config["samples"], read_num=["1", "2"]),
        expand("trimmomatic_output/{sample}_1.paired.fastq.gz", sample=config["samples"]),
        expand("post_trim_fastqc/html/{sample}_{read_num}.html", sample=config["samples"], read_num=["1", "2"]),
        expand("Hybpiper_output/{sample}/genes_with_seqs.txt", sample=config["samples"])

rule fastqc:
    input:
        lambda wildcards: f"{config['raw_reads']}/{wildcards.sample}_{wildcards.read_num}.fastq.gz"
    output:
        html="fastqc_output/html/{sample}_{read_num}.html",
        zip="fastqc_output/zip/{sample}_{read_num}.fastqc.zip"
    params:
        extra="--quiet"
    log:
        "fastqc_output/log/{sample}_{read_num}.log"
    threads: 1
    resources:
        mem_mb = 1024
    wrapper:
        "v5.2.1/bio/fastqc"

rule trimmomatic_pe:
    input:
        r1=lambda wildcards: f"{config['raw_reads']}/{wildcards.sample}_1.fastq.gz",
        r2=lambda wildcards: f"{config['raw_reads']}/{wildcards.sample}_2.fastq.gz"
    output:
        r1="trimmomatic_output/{sample}_1.paired.fastq.gz",
        r2="trimmomatic_output/{sample}_2.paired.fastq.gz",
        r1_unpaired="trimmomatic_output/{sample}_1.unpaired.fastq.gz",
        r2_unpaired="trimmomatic_output/{sample}_2.unpaired.fastq.gz"
    log:
        "trimmomatic_output/log/{sample}.log"
    params:
        trimmer=config["trimmer"]
    threads:
        config["threads"]
    resources:
        mem_mb=1024
    wrapper:
        "v5.2.1/bio/trimmomatic/pe"

rule post_trim_fastqc:
    input:
        "trimmomatic_output/{sample}_{read_num}.paired.fastq.gz"
    output:
        html="post_trim_fastqc/html/{sample}_{read_num}.html",
        zip="post_trim_fastqc/zip/{sample}_{read_num}.fastqc.zip"
    params:
        extra="--quiet"
    log:
        "post_trim_fastqc/log/{sample}_{read_num}.log"
    threads: 1
    resources:
        mem_mb = 1024
    wrapper:
        "v5.2.1/bio/fastqc"

rule Hybpiper_assemble:
    input:
        read1="trimmomatic_output/{sample}_1.paired.fastq.gz",
        read2="trimmomatic_output/{sample}_2.paired.fastq.gz",
        file=config["target_file"] 
    output:
        dir="Hybpiper_output/{sample}/genes_with_seqs.txt"
    conda:
        "hybpiper"
    threads:
        config["threads"]
    params:
        out_directory="Hybpiper_output/",
        aligner=config["aligner"],
        diamond_sensitivity=config.get("diamond_sensitivity", "very_sensitive") 
    shell:
        """
        hybpiper assemble --readfiles {input.read1} {input.read2} \
            --targetfile_aa {input.file} \
            --{params.aligner} \
            --cpu {threads} \
            --hybpiper_output {params.out_directory} \
            $(if [ "{params.aligner}" = "diamond" ]; then echo "--diamond_sensitivity {params.diamond_sensitivity}"; fi)
        """
